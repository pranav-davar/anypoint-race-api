<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:race-data-system-api="http://www.mulesoft.org/schema/mule/race-data-system-api"
	xmlns:redis="http://www.mulesoft.org/schema/mule/redis"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd
http://www.mulesoft.org/schema/mule/race-data-system-api http://www.mulesoft.org/schema/mule/race-data-system-api/current/mule-race-data-system-api.xsd">
	<sub-flow name="getLeaderboard" doc:id="1c6b973d-7dc2-423b-9c8a-8a9930fd573c" >
		<ee:transform doc:name="empty results" doc:id="aaa1b900-e6cc-4a8b-8b86-2ac23f90942e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	banner: "season",
	scores: []
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="appendLeaderboard" doc:id="8b378404-9c71-4852-b870-5690f3205046" name="appendLeaderboard"/>
	</sub-flow>
	<sub-flow name="appendLeaderboard" doc:id="feda3787-f9ba-4f84-b7b7-096756789fd3" >
		<set-variable value='#[vars.leaderboardId match {&#10;        case is Null -&gt; "average1b"&#10;        case "average1b" -&gt; "average1m"&#10;        case "average1m" -&gt; "average1k"&#10;        case "average1k" -&gt; "lap100"&#10;        case "lap100" -&gt; "racer"&#10;        else -&gt; null&#10;    }]' doc:name="leaderboardId" doc:id="8c4fe7e9-0a63-436e-8cb1-416b6a099dff" variableName="leaderboardId"/>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="fde5a8f1-e35d-44c7-82bf-c7c62d66dc45" message="Fetching #[vars.leaderboardId] results for #[vars.timespan]" category="race.leaderboards"/>
		<race-data-system-api:get-leaderboard doc:name="Get Leaderboard" doc:id="6fcfa73d-779d-462d-b4b2-6dfea7c9ac0b" config-ref="raceDataSystemApiConfig" count="#[vars.count]" id="#[vars.leaderboardId]" target="newResults" timespan="#[vars.timespan]" min-rank="#[vars.minRank]" racer-id="#[vars.racerId]"/>
		<ee:transform doc:name="results" doc:id="88c57a89-2141-4d49-8d13-27e773b8a847" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import some, take from dw::core::Arrays
output application/json
fun appendNewResults(scores) = do {
	var maxRank = max(scores map $.rank) default 0
	var unranked = vars.newResults filter (result) ->
		not (scores some (score) -> score.racerId == result.racerId)
	var newScores = unranked map (result, index) -> 
		{
			tier: vars.leaderboardId,
			name: result.name,
			racerId: result.racerId,
			rank: maxRank + index + 1,
			time: result.time
		}
	---
	scores ++ newScores
}
---
payload update {
	case scores at .scores -> appendNewResults(scores) take vars.count
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="6bbb4e2d-3be8-4229-9b16-bee46cb0724e" category="race.leaderboards" message="after append  #[output application/json --- payload]"/>
		<choice doc:name="Choice" doc:id="2153b8fb-8a47-442b-b836-211b808f3c7f" >
			<when expression='#[vars.count &gt; sizeOf(payload.scores) and "racer" != vars.leaderboardId]'>
				<flow-ref doc:name="appendLeaderboard" doc:id="b8ae29ac-8413-4eb7-b79f-64e4837b24b2" name="appendLeaderboard"/>
			</when>
			<otherwise >
				<logger level="DEBUG" doc:name="DEBUG" doc:id="9ed1dff1-6eae-4748-9b4b-e455ffb5f888" message="Finished fetching #[vars.timespan] leaderboard from race data SAPI: #[sizeOf(payload.scores)] results" category="race.leaderboards"/>
			</otherwise>
		</choice>
	</sub-flow>
</mule>
